@using App.Components.Pages.Home.Services
@namespace App.Components.Pages.Home.Components
@inject IFeaturedProjectsProvider FeaturedProjectsProvider

<div class="card">
    <div>
        <div style="display: flex; justify-content: space-between">
            <p class="card-title">
                @if (Project?.RepositoryUrl is not null)
                {
                    <a href="@Project.RepositoryUrl" target="_blank">@ProjectDefinition.DisplayName</a>
                }
                else
                {
                    <text>@ProjectDefinition.DisplayName</text>
                }
            </p>
            <div class="links">
                @if (ProjectDefinition.RepoId is not null)
                {
                    <a href="https://github.com/@ProjectDefinition.RepoId" target="_blank" title="GitHub">
                        <i class="fa-brands fa-github fa-lg"></i>
                    </a>
                }
                @if (Project?.PackageUrl is not null)
                {
                    <a href="@Project.PackageUrl" target="_blank" title="NuGet">
                        <i class="fa-kit fa-nuget fa-lg"></i>
                    </a>
                }
                @if (ProjectDefinition.WebsiteUrl is not null)
                {
                    <a href="@ProjectDefinition.WebsiteUrl" target="_blank" title="@ProjectDefinition.WebsiteUrlTitle">
                        <i class="fa-solid fa-globe fa-lg"></i>
                    </a>
                }
            </div>
        </div>
        @if (Project is null)
        {
            <p><em>Loading...</em></p>
        }
        else if (Project.Description != null)
        {
            <p class="card-description">@Project.Description</p>
        }
    </div>

    @if (Project is not null)
    {
        <div class="project-languages">
            @foreach (var (language, _) in Project.Languages)
            {
                <div title="@((Project.GetLanguagePercentage(language) * 100).ToString("0.00"))% @language">
                    <span class="icon" style="color: @GetLanguageColor(language)">
                        <i class="fa-solid fa-circle"></i>
                    </span>
                    <span>@language</span>
                </div>
            }
        </div>
        <div class="project-stats">
            @if (Project.StarCount is not null)
            {
                <span class="project-stat" title="@Project.StarCount stars">
                    <span class="icon">
                        <i class="fa-light fa-star"></i>
                    </span>
                    <span>@Project.StarCount</span>
                </span>
            }
            @if (Project.ForkCount is not null)
            {
                <span class="project-stat" title="@Project.ForkCount forks">
                    <span class="icon">
                        <i class="fa-light fa-code-fork"></i> 
                    </span>
                    <span>@Project.ForkCount</span>
                </span>
            }
            @if (Project.DownloadCount is not null)
            {
                <span class="project-stat" title="@Project.DownloadCount downloads">
                    <span class="icon">
                        <i class="fa-light fa-download"></i>
                    </span>
                    <span>@Project.DownloadCount</span>
                </span>
            }
        </div>
    }
</div>

@code {
    
    [Parameter] 
    public required FeaturedProjectDefinition ProjectDefinition { get; set; }

    private FeaturedProject? Project { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Project = await FeaturedProjectsProvider.GetFeaturedProjectDetailsAsync(ProjectDefinition);
    }
    
    private static string GetLanguageColor(string language) => language switch
    {
        "C#" => "#178600",
        "CSS" => "#663399",
        "HTML" => "#e34c26",
        "JavaScript" => "#f1e05a",
        _ => "var(--dark)"
    };

}